openapi: 3.0.1
info:
  contact:
    name: ZERA GmbH
    url: https://www.zera.de/en/contact/
  description: A Web API for controlling a source.
  title: SourceApi
  version: v1
servers:
- url: /
paths:
  /api/v1/Vein/GetInfo:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VeinGet'
          text/json:
            schema:
              $ref: '#/components/schemas/VeinGet'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VeinGet'
        description: The information to get from Vein.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VeinGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VeinGetResponse'
            application/*+json:
              schema:
                $ref: '#/components/schemas/VeinGetResponse'
          description: If the information could be successfully retrieved.
        "400":
          description: If the request was malformed.
        "422":
          description: If the request was wellformed but could not be retrieved.
        "500":
          description: If an unexpected error occured.
      summary: Gets information from Vein.
      tags:
      - Vein
  /api/v1/Vein/SetInfo:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VeinSet'
          text/json:
            schema:
              $ref: '#/components/schemas/VeinSet'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VeinSet'
        description: The information to set to Vein.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/*+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: If the information could be successfully set.
        "400":
          description: If the request was malformed.
        "422":
          description: If the request was wellformed but could not be set.
        "500":
          description: If an unexpected error occured.
      summary: Sets information to Vein.
      tags:
      - Vein
components:
  schemas:
    VeinGet:
      example:
        EntityID: 0
        MiscFieldForInfo: MiscFieldForInfo
        componentName: componentName
      properties:
        EntityID:
          description: The component ID of the desired information
          format: int32
          nullable: false
          type: integer
        componentName:
          description: The component name of the desired information
          nullable: false
          type: string
        MiscFieldForInfo:
          description: However we want to handle the request field
          nullable: false
          type: string
      type: object
    VeinGetResponse:
      example:
        ReturnInformation: "{}"
      properties:
        ReturnInformation:
          description: The desired return information formated as json
          type: object
      type: object
    VeinSet:
      example:
        EntityID: 0
        MiscFieldForInfo: MiscFieldForInfo
        componentName: componentName
      properties:
        EntityID:
          description: The component ID of the desired information
          format: int32
          nullable: false
          type: integer
        componentName:
          description: The component name of the desired information
          nullable: false
          type: string
        MiscFieldForInfo:
          description: However we want to handle the setter field
          nullable: false
          type: string
      type: object
    ProblemDetails:
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 0
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
