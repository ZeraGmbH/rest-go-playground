/*
 * SourceApi
 *
 * A Web API for controlling a source.
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type VeinGet struct {

	// The component ID of the desired information
	EntityID int32 `json:"EntityID,omitempty"`

	// The component name of the desired information
	ComponentName string `json:"componentName,omitempty"`
}

// AssertVeinGetRequired checks if the required fields are not zero-ed
func AssertVeinGetRequired(obj VeinGet) error {
	return nil
}

// AssertRecurseVeinGetRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of VeinGet (e.g. [][]VeinGet), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseVeinGetRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aVeinGet, ok := obj.(VeinGet)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertVeinGetRequired(aVeinGet)
	})
}
